[
  {
    "objectID": "notebooks/assignment_instructions.html",
    "href": "notebooks/assignment_instructions.html",
    "title": "Assignment Instructions",
    "section": "",
    "text": "Place your answer in the indicated place in the document. Each question is followed by one or more sections, each with an empty cell called “ANSWER”. Insert your answer for that question below the word “ANSWER”. You may use multiple cells for each answer that include both markdown and code.\nEnsure that all cells have been run. Cells that have not been run will be treated as unanswered questions and assigned zero points.\nCreate a PDF document of your notebook. There are a few ways to do this. Please see the guide below.\nCheck that your content is easily legible prior to submission. Look over your PDF before you submit it. If we cannot read it, or parts are missing, we cannot grade it, and no credit will be given for anything we cannot read.\nSubmit your pdf by the deadline on gradescope. Any assignments received after the deadline will be treated as late. Please see this video for how to submit your assignment on gradescope. The submission link is here: https://www.gradescope.com/\nAssign the respective pages to each question. When you submit your assignment on Gradescope, you will be asked to assign pages of your PDF to each question accordingly. Please remember, as stated in item 4, if we cannot find your answer, we cannot grade it.\n\nSee below for a checklist for your document before you submit."
  },
  {
    "objectID": "notebooks/assignment_instructions.html#how-to-submit-assignments",
    "href": "notebooks/assignment_instructions.html#how-to-submit-assignments",
    "title": "Assignment Instructions",
    "section": "",
    "text": "Place your answer in the indicated place in the document. Each question is followed by one or more sections, each with an empty cell called “ANSWER”. Insert your answer for that question below the word “ANSWER”. You may use multiple cells for each answer that include both markdown and code.\nEnsure that all cells have been run. Cells that have not been run will be treated as unanswered questions and assigned zero points.\nCreate a PDF document of your notebook. There are a few ways to do this. Please see the guide below.\nCheck that your content is easily legible prior to submission. Look over your PDF before you submit it. If we cannot read it, or parts are missing, we cannot grade it, and no credit will be given for anything we cannot read.\nSubmit your pdf by the deadline on gradescope. Any assignments received after the deadline will be treated as late. Please see this video for how to submit your assignment on gradescope. The submission link is here: https://www.gradescope.com/\nAssign the respective pages to each question. When you submit your assignment on Gradescope, you will be asked to assign pages of your PDF to each question accordingly. Please remember, as stated in item 4, if we cannot find your answer, we cannot grade it.\n\nSee below for a checklist for your document before you submit."
  },
  {
    "objectID": "notebooks/assignment_instructions.html#jupyter-notebooks",
    "href": "notebooks/assignment_instructions.html#jupyter-notebooks",
    "title": "Assignment Instructions",
    "section": "Jupyter Notebooks",
    "text": "Jupyter Notebooks\nIf you could use help getting started or a refresher on Jupyter notebooks, check out this video for more on basic Jupyter functionality. Using Jupyter notebooks allows you to practice applying machine learning concepts while building programming and writing skills, strengthening your ability to both create creative solutions to machine learning challenges while simultaneously enhancing your ability to communicate the meaning behind your findings and why others should give credence to your results."
  },
  {
    "objectID": "notebooks/assignment_instructions.html#rendering-a-pdf-file",
    "href": "notebooks/assignment_instructions.html#rendering-a-pdf-file",
    "title": "Assignment Instructions",
    "section": "Rendering a PDF file",
    "text": "Rendering a PDF file\n\nOption 1: Render from VS Code (without additional extensions)\nWe recommend using VS Code for this course and for use in developing your Jupyter notebooks. Rendering pdfs from Jupyter Notebooks in VS Code has a couple of extra steps, though. To render a pdf without any additional extensions, you do the following:\n\nOpen your notebook in VS code and hit the ellipsis (the three horizontal dots) just to the right of the tools for your notebook:\n\n\n\nClick “Export”:\n\n\n\nSelect “HTML” (exporting to pdf won’t work without the installation of additional tools):\n\n\n\nOpen the HTML file you just saved in Chrome:\n\n\n\nClick the options button (three vertical dots) and click “print”:\n\n\n\nSelect the destination as “Save as PDF” and click “Save”:\n\n\n\nVoila! You should have a pdf\n\n\n\nOption 2: Render from VS Code with Quarto and LaTeX\nYou can save a lot of the above steps if you’re willing to install 2 things: 1. Install Quarto, which is an open-source scientific and technical publishing system (great for making websites and blogs for your professional portfolio). 2. Install the Quarto VS Code extension 3. Install a version of tex for your operating system. 4. Once you do this, you can directly export your documents to pdf:\n\n\n\nOption 3: Render from Jupyter Notebooks\nOpen your notebook in a Jupyter Notebook in Google Chrome. Go to File-&gt;Print Preview, then after verifying the document looks correct, click “print” and for your printer choose “Save as PDF.”\nWhichever method you choose - always check your pdf before submitting to make sure everything is rendered and nothing is cut off!"
  },
  {
    "objectID": "notebooks/assignment_instructions.html#assignment-grading",
    "href": "notebooks/assignment_instructions.html#assignment-grading",
    "title": "Assignment Instructions",
    "section": "Assignment Grading",
    "text": "Assignment Grading\nAssignment grading will consist of two components: content (90%) and presentation (10%). The content grade will be based on the accuracy and completeness (including the depth) of your answers to each question. If a question asks you to explain, hypothesize, or otherwise think critically, be sure to demonstrate your critical engagement with the question. The presentation score will be based on how well you communicate in writing, figure creation, and coding. Clear writing (with appropriate grammar and spelling), organized answers, well-organized/commented code, and properly formatted figures will ensure your success on the presentation component of the assignment."
  },
  {
    "objectID": "notebooks/assignment_instructions.html#example-question-and-response",
    "href": "notebooks/assignment_instructions.html#example-question-and-response",
    "title": "Assignment Instructions",
    "section": "Example Question and Response",
    "text": "Example Question and Response\nBelow is an example question to demonstrate how to answer a question using a Jupyter notebook.\nCalculate the (a) first and (b) second derivative of \\(f(t) = t^3\\). lastly, (c) numerically evaluate the second derivative for \\(t=3\\). If \\(t\\) represents time (seconds) and \\(f\\) represents distance of a ball over time (in meters), then (d) what does the second derivative at \\(t=3\\) mean?\nANSWER\nThe first and second derivatives are calculated as follows:\n(a) The first derivative is: \\[ \\frac{df}{dt} = 3t^2\\]\n(b) The second derivative is: \\[ \\frac{d^2f}{dt^2} = 6t\\]\n(c) We calculate the second derivative at time \\(t=3\\) as follows:\n\n# (c) Numerically evaluate the second derivative for f(x)\n\n# Initialize variables for the analysis\nt = 3\n\n# Compute the derivative\ndf2 = 6 * t\n\nprint('(c) The second derivative at t = 3 is {}'.format(df2))\n\n(c) The second derivative at t = 3 is 18\n\n\n(d) This derivative, which is the second derivative of distance with respect to time represents the acceleration of the ball in \\(m^2\\) per second. This shows how quickly the ball is increasing its speed over time.\n\nFigure Example:\nHere is an example of a well-prepared figure that checks all of the requirements for good figures. To demonstrate we’ll start by loading some data to plot (the example here is from the lecture on bias-variance tradeoff):\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pickle\n\n# Load the data for plotting\ndatafilename = './plot_example_data/data.pkl'\ninfile = open(datafilename,'rb')\nloaded_data = pickle.load(infile)\ninfile.close()\n\n# Store the loaded data in convenient variable names\nkvalues = loaded_data['kvalues']\nerror_training = loaded_data['error_training']\nerror_testing = loaded_data['error_testing']\nerror_bayesclf = loaded_data['error_bayesclf']\n\n# Choose colors that will be distinguishable from one another\ncolor0 = '#121619' # Dark grey\ncolor1 = '#00B050' # Green\ncolor2 = '#7c7c7c' # Light grey\n\nThen, we create the plot:\n\n%config InlineBackend.figure_format = 'retina' # Make clear on high-res screens\n\n# Create the plot\nplt.figure(figsize=(7,5), dpi= 100) # Adjust the figure size and dots per inch \nplt.semilogx(kvalues,error_training,color=color0,label='Training (in-sample)')\nplt.semilogx(kvalues,error_testing,color=color1,label='Test (out-of-sample)')\nplt.semilogx(kvalues,error_bayesclf,'--',color=color2,label='Bayes (optimal)')\nplt.legend()\nplt.grid('on')\nplt.xlabel('k nearest neighbors') # Always use X and Y labels\nplt.ylabel('Binary Classification Error Rate')\nplt.axis([1,200,0,0.5]) # Ensure the axis is the right size for the plot data\nplt.tight_layout() # Use this to maximize the use of space in the figure\nplt.show()\n\n\n\n\nNote the clear x and y axis labels and legends - there are no acronyms or shorthands used, just the full description of what is being plotted. Also note how easy it is to compare the color of lines and identify the baseline (Bayes) comparison line. Make your plots easy to read and understand."
  },
  {
    "objectID": "notebooks/assignment_instructions.html#checklist-before-submitting-your-assignment",
    "href": "notebooks/assignment_instructions.html#checklist-before-submitting-your-assignment",
    "title": "Assignment Instructions",
    "section": "Checklist before submitting your assignment",
    "text": "Checklist before submitting your assignment\n\nAnswers are placed in the indicated place in the document. Each question is followed by one or more sections, each with an empty cell called “ANSWER”. Insert your answer for that question below the word “ANSWER”. You may use multiple cells for each answer that include both markdown and code. For full credit, submitted assignments should be easily navigable with answers for subquestions clearly indicated (e.g. using “(a)” to indicate a subquestion).\nAll cells have been run. Cells that have not been run will be treated as unanswered questions and assigned zero points.\nYour submission is a PDF document. See guidelines above\nYour content is legible prior to submission. Look over your PDF before you submit it. If we cannot read it, or parts are missing, we cannot grade it, and no credit will be given for anything we cannot read or is missing.\n\nCode is valid (able to run and producing the correct answer), neat, understandable, and well commented.\nMath is typeset using LateX equations.\nAll text that is not code should be formatted using markdown. Two references to help include: ref1 and ref2.\n\nDescriptive text provides adequate detail to answer questions. When questions as “why” or for you to describe findings, the expectation is that the response will be much more than one or two words.\nProper grammar and spelling are expected throughout\n\n\nFigure checklist\n\nAll plots should have axes labels and legible fonts (large enough to read).\nLegends are used when there are multiple series plotted on a single plot.\nFigures are crisp and clear - there are no blurry figures.\nMarkers on plots are properly sized (e.g. not be too big nor too small) and/or have the appropriate level of transparency to be able to clearly read the data without obscuring other data.\nIf there are multiple colors used on a plot, EVERY color can be distinguished from the rest."
  },
  {
    "objectID": "notebooks/assignment_instructions.html#sources",
    "href": "notebooks/assignment_instructions.html#sources",
    "title": "Assignment Instructions",
    "section": "Sources",
    "text": "Sources\nSome questions on the assignments are adapted from sources including:\n1. James et al., An Introduction to Statistical Learning\n2. Abu-Mostafa, Yaser, Learning from Data\n3. Weinberger, Kilian, Machine Learning CS4780, Cornell University"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Course Logistics",
    "section": "",
    "text": "Class Time and Location\n\n\n\n\nWhen: Tuesday and Thursdays 10:05am - 11:20am\nWhere: French Science 2231\n\n\n\n\n\n\nEd Discussions: Announcements, Q&A on course content (assignments, quizzes, grades), ALL course communications\nGradescope: Quizzes, assignments, and project submission & feedback\nSchedule: Schedule of class topics and deliverables\nCanvas: Posted grades\n\n\n\n\nA version of each book is available free online:\n\nAn Introduction to Statistical Learning with Python by Gareth James, Daniela Witten, Trevor Hastie and Robert Tibshirani, 2013.\nUnderstanding Deep learning by Simon Prince, 2023.\nPattern Recognition and Machine Learning by Christopher Bishop, 2006.\nDeep Learning by Ian Goodfellow, Yoshua Bengio, and Aaron Courville, 2016.\nReinforcement Learning: An Introduction, by Richard Sutton and Andrew Barto, 2018.\n\n\n\n\nAssignments, projects, & quizzes: Assignments and projects details are posted on the course syllabus. For expectations and instructions on the assignments, see the Assignment Instructions. Quizzes are found on Gradescope and are due prior to the start of the lecture for which they’re titled (i.e. the Lecture 3 Quiz is due by the start of Lecture 3).\n\n\n\n55% Assignments (5, each worth ~11%)\n20% Quizzes (~23, each worth &lt;1%)\n25% Final Project\n\n\n\n\n\nThis course moves quickly, so having a firm grasp on prerequisites is important. The prerequisites are as follows:\n\nProgramming: Fundamentals of Python programming.\nMathematics: Calculus and linear algebra.\nStatistics: Introductory probability and statistics."
  },
  {
    "objectID": "syllabus.html#basic-logistics",
    "href": "syllabus.html#basic-logistics",
    "title": "Course Logistics",
    "section": "",
    "text": "Class Time and Location\n\n\n\n\nWhen: Tuesday and Thursdays 10:05am - 11:20am\nWhere: French Science 2231\n\n\n\n\n\n\nEd Discussions: Announcements, Q&A on course content (assignments, quizzes, grades), ALL course communications\nGradescope: Quizzes, assignments, and project submission & feedback\nSchedule: Schedule of class topics and deliverables\nCanvas: Posted grades\n\n\n\n\nA version of each book is available free online:\n\nAn Introduction to Statistical Learning with Python by Gareth James, Daniela Witten, Trevor Hastie and Robert Tibshirani, 2013.\nUnderstanding Deep learning by Simon Prince, 2023.\nPattern Recognition and Machine Learning by Christopher Bishop, 2006.\nDeep Learning by Ian Goodfellow, Yoshua Bengio, and Aaron Courville, 2016.\nReinforcement Learning: An Introduction, by Richard Sutton and Andrew Barto, 2018.\n\n\n\n\nAssignments, projects, & quizzes: Assignments and projects details are posted on the course syllabus. For expectations and instructions on the assignments, see the Assignment Instructions. Quizzes are found on Gradescope and are due prior to the start of the lecture for which they’re titled (i.e. the Lecture 3 Quiz is due by the start of Lecture 3).\n\n\n\n55% Assignments (5, each worth ~11%)\n20% Quizzes (~23, each worth &lt;1%)\n25% Final Project\n\n\n\n\n\nThis course moves quickly, so having a firm grasp on prerequisites is important. The prerequisites are as follows:\n\nProgramming: Fundamentals of Python programming.\nMathematics: Calculus and linear algebra.\nStatistics: Introductory probability and statistics."
  },
  {
    "objectID": "syllabus.html#course-policies",
    "href": "syllabus.html#course-policies",
    "title": "Course Logistics",
    "section": "Course Policies",
    "text": "Course Policies\n\nAcademic dishonesty\nAdherence to the Duke Community Standard is expected. To uphold the Duke Community Standard:\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised\nAnyone found in violation of the Standard will be reported to the Office of Student Conduct.\n\n\nClass Attendance\nAttending class is a vital component of the course as it is one of the multiple ways in which you will interact with and learn course material. In person class attendance is therefore expected for this course. For any special circumstances, please reach out to the course instructor.\n\n\nSick absences\nTo keep the university community as safe and healthy as possible, please do not come to class if you have cold symptoms. Please inform me of your absence and plan to complete any missed work. Students who encounter short- and long-term medical issues or instances of personal distress or emergency can seek academic support if needed. Recordings of the class will be available for excused absences.\n\n\nAccommodations and accessibility\nIf you need special accommodations due to physical or learning disabilities, medical needs, religious practices, or other reasons, please inform us as soon as possible so we can work to accommodate those needs.\nIf you are a student with a disability and need accommodations for this class, please register with the Student Disability Access Office (SDAO) and provide them with documentation of your disability. SDAO will work with you to determine what accommodations are appropriate for your situation. Please note that accommodations are not retroactive and disability accommodations cannot be provided until a Faculty Accommodation Letter has been given to your instructor. Please contact SDAO for more information: sdao@duke.edu or .\n\n\nLate Submissions\nAssignments and projects are due in class by the start of class on the date posted. Late deliverables will ONLY be accepted at the discretion of the instructor. Late Assignments will result in a reduction of 5 points off the grade per day late. Course projects will not be accepted after the deadline. Quizzes will not be accepted after the deadline. While quizzes cannot be made up since the answers are discussed, the lowest two quizzes will be dropped at the end of the semester for each student to accommodate necessary absences and to account for days when we’re off our game. Please reach out to the TA’s or instructor as early as possible to request any special accommodations.\n\n\nCollaboration\nThere will be three modes of collaboration ranging from fully-collaborative group projects, to fully-independent work. The three modes are as follows, and will be indicated throughout the course:\n\nMode 1: Team-based Assignment. Collaboration is expected with every member of the team contributing to a single deliverable. Applies to the Project\nMode 2: Individual Assignment – Collaboration Permitted. Students hand in individual work, but they may work with others if they provide citations of the help they received, such as a list of people who assisted/collaborated with them to produce the final product. Duplication or copying is not permissible, even in part, and constitutes a breach of the honor code. Applies to Assignments\nMode 3: Individual Assignment – No Collaboration Permitted. Students hand in individual work that is completed entirely independent of any discussion or help from other students. Clarifying questions to teaching assistants and instructors are both permissible and encouraged. Applies to Quizzes\n\n\n\nRules for recording course content\nStudent recording recordings of lectures must be permitted by the instructor prior to recording and shall be for private study only. Such recordings shall not be distributed to anyone else without authorization by the instructor whose lecture has been recorded. However, the instructor may arrange through the Office of Information Technology to make recorded lectures available to students enrolled in the class on such terms and conditions as he or she prescribes. Redistribution of recorded lectures is prohibited. Unauthorized distribution is a cause for disciplinary action by the Judicial Board. The full policy on recoding of lectures falls under the Duke University Policy on Intellectual Property Rights, available here."
  },
  {
    "objectID": "syllabus.html#the-use-of-artificial-intelligence",
    "href": "syllabus.html#the-use-of-artificial-intelligence",
    "title": "Course Logistics",
    "section": "The use of Artificial Intelligence",
    "text": "The use of Artificial Intelligence\nThis class is all about artificial intelligence, however, the primary intelligence that we are working to expand is your own.\n\nChallenges of commercial AI tools\nQuoted excerpts below from the University of Delaware\nCommercial AI tools have significant and sometimes difficult-to-spot limitations. “For example, the current generation of Chat-GPT cannot perform synthesis of sources or even document the sources that were used to create its responses. So it may be useful for idea generation or generic recommendations but it has no ability to creatively and independently generate new insights and make novel connections. These tools may also produce information that is incorrect or biased so students must ensure that material they submit or share has been verified with appropriate sources and is reasonably free of biases.”\n\n\nResponsible use of AI tools\nThere are a number of ways that AI tools can be helpful:\n\nAs a way of detecting spelling and grammar issues (such as with Grammarly)\nAs a way of identifying possible ways to structure writing (although NOT to do the writing for you)\nAs a way of brainstorming ideas (keeping in mind that what is generated by the AI may be incorrect or misleading)\n\nIn this class, the use of AI tools is acceptable WITH CITATION. An appropriate citation would indicate the following information:\n\nWhat AI tool you used (e.g. ChatGPT)\nHow you used it, specifying prompts used (e.g. I checked my writeup for clarity with the prompt, “Review this text {} and improve its clarity”)\n\nAt the end of the day you are responsible for the correctness of everything that you submit, regardless of whether there was an AI tool used in its generation."
  },
  {
    "objectID": "syllabus.html#mental-health-and-wellness-resources",
    "href": "syllabus.html#mental-health-and-wellness-resources",
    "title": "Course Logistics",
    "section": "Mental Health and Wellness Resources",
    "text": "Mental Health and Wellness Resources\nStudent mental health and wellness are of primary importance at Duke, and the university offers resources to support students in managing daily stress and self- care.\nIf your mental health concerns or stressful events negatively affect your daily emotional state, academic performance, or ability to participate in your daily activities, many resources are available to help you through difficult times. Duke offers several resources for all students to seek assistance and to nurture daily habits that support overall well-being, some of which are listed below:\n\nDuWell, (919) 681-8421. DuWell provides Moments of Mindfulness (stress management and resilience building) and meditation programming (Koru workshop) to assist students in developing a daily emotional well-being practice. All are welcome and no experience necessary.\nDukeReach. DukeReach provides comprehensive outreach services to identify and support students in managing all aspects of well-being.\nCounseling and Psychological Services (CAPS), (919) 660-1000. CAPS services include individual and group counseling services, psychiatric services, and workshops. CAPS also provides referral to off-campus resources for specialized care. • TimelyCare (formerly known as Blue Devils Care). An online platform that is a convenient, confidential, and free way for Duke students to receive 24/7 mental health support through TalkNow and scheduled counseling."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Final Project",
    "section": "",
    "text": "Machine learning tools are not an end in themselves, but yield value when making predictions, quantifying and describing phenomena in the world around us, and in all these ways and more helping us to make decisions that would otherwise be difficult or impossible. For this final project, you will work in teams to (1) identify a problem to solve or a question to answer, (2) apply machine learning techniques to conduct experiments to address the issues identified in (1), (3) rigorously evaluate the performance of your approach, and (4) clearly communicate your findings to a wide audience. The deliverables for this project are:\n\nProject proposal\nFinal written report and a draft report prior to final submission\nPresentation. During our final class meeting we will have a project showcase and competition.\nGithub repository for your project\nPeer evaluation\n\nOther topics described in this document related to the project include: - Learning objectives - Submission, evaluation, & grading - Project ideas - Frequently asked questions"
  },
  {
    "objectID": "project.html#summary-and-goals",
    "href": "project.html#summary-and-goals",
    "title": "Final Project",
    "section": "",
    "text": "Machine learning tools are not an end in themselves, but yield value when making predictions, quantifying and describing phenomena in the world around us, and in all these ways and more helping us to make decisions that would otherwise be difficult or impossible. For this final project, you will work in teams to (1) identify a problem to solve or a question to answer, (2) apply machine learning techniques to conduct experiments to address the issues identified in (1), (3) rigorously evaluate the performance of your approach, and (4) clearly communicate your findings to a wide audience. The deliverables for this project are:\n\nProject proposal\nFinal written report and a draft report prior to final submission\nPresentation. During our final class meeting we will have a project showcase and competition.\nGithub repository for your project\nPeer evaluation\n\nOther topics described in this document related to the project include: - Learning objectives - Submission, evaluation, & grading - Project ideas - Frequently asked questions"
  },
  {
    "objectID": "project.html#learning-objectives",
    "href": "project.html#learning-objectives",
    "title": "Final Project",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nThis project is an opportunity to identify and deeply explore a question or problem of your choosing, using machine learning tools. A central component of your project must be a machine learning methodology. It does not have to be one that we’ve explicitly discussed in class as you’re welcome to use the project as an opportunity to learn new topics, although there should be a supervised learning component to your project. The objectives of this project are to…\n\nDevelop deeper competency in applying machine learning methods in practical applications\nGain experience in learning more about a topi beyond what was explicitly discussed, but by building on the foundation you have developed throughout the course which enables you to learn about other machine learning concepts\nIncrease your experience with collaborative data science workflows\nExpand your data science portfolio\n\nIn this project you will use what you’ve learned throughout this course and build on that knowledge and experience to apply the paradigms, algorithms, evaluation tools, and interpretation techniques discussed throughout the course. I strongly encourage you to pick a project that is of genuine interest in some way (e.g. the application, the tools, the dataset, etc.). Learning comes from stretching yourself: this requires that you push yourself into some unfamiliar territory and that is often a challenge and leads to desirable difficulty. Through this struggle is how the best learning happens, but it requires perseverance and that is best achieved when you are able to bring intrinsic motivation to that challenge. Find a topic of interest and embrace the challenge!\nFor this project you will identify a problem you wish to solve using machine learning tools. Identify the experiment you would need to run to evaluate how well you solved it as compared to existing approaches in the field including what metrics to use to evaluate performance.\n\nRequirements\n\nThe project must involve supervised machine learning. You may include concepts we were not able to cover in the course. You may include other concepts at well, but there should be a supervised learning component.\nThe project must be able to be completed within the course of this semester and should be scoped correctly: we encourage you to be ambitious, but please visit office hours if you have questions about project scope.\nEvery project should involve reading about both your application domain and the methods that you’re using. A project on genetics should involve learning about and understanding the concepts that you’re using. You’re expected to develop some domain knowledge related to your problem and demonstrate that in the report."
  },
  {
    "objectID": "project.html#proposal",
    "href": "project.html#proposal",
    "title": "Final Project",
    "section": "Proposal",
    "text": "Proposal\nYour team will submit a short project proposal. You will receive feedback that should be used to guide your project development and execution. There are no length requirements on the proposal, but 2 pages should typically be sufficient. Every proposal should have the title of the project and the list of team members at the top of the first page.\nYou can find the project proposal template and instructions here. You are required to use the template for your proposal so that we can provide comments in Google docs. Please read through and discuss the different points mentioned in the template prior to submission.\nAdditionally, content from your proposal may be reused in your draft/final report and so you’re encouraged to invest in it with that in mind.\nIf you are looking for ideas about datasets, etc., please see the Ideas section below. Please stop by office hours if you would like to discuss specific project ideas or for any other help in selecting your project idea."
  },
  {
    "objectID": "project.html#final-report",
    "href": "project.html#final-report",
    "title": "Final Project",
    "section": "Final Report",
    "text": "Final Report\nThe final project report that you submit will consist of two parts: (1) a draft project report and (2) a final report. The draft project report is your main opportunity to get detailed feedback on your report. While the draft report won’t be graded, we will provide written feedback and suggestions in the form of Google doc comments that we would strongly recommend addressing in your final report.\nPlease find the instructions and template for the final report here."
  },
  {
    "objectID": "project.html#presentation",
    "href": "project.html#presentation",
    "title": "Final Project",
    "section": "Presentation",
    "text": "Presentation\nYou will also make a 3-minute presentation (strictly enforced) summarizing your project. This presentation should be visually compelling and should not miss the “forest for the trees” – don’t get lost in technical details. Imagine your aunt and uncle watching your presentation – would they know what is going on? Would they find it approachable and engaging? For inspiration for what makes an approachable discussion of a machine learning project, watch videos from the following series:\n\nTwo Minute Papers by Károly Zsolnai-Fehér. Concise 1-4 minute summaries of cutting edge research papers.\n3Blue1Brown by Grant Sanderson. Mathematical concepts conveyed clearly, intuitively, and visually.\n\nBe sure to practice your presentation, ask your friends (especially those who may not be as technically inclined) for feedback. Do they think it was engaging/easy to follow? Ask them their takeaways: did they get the message you were trying to communicate? Address their feedback to help you ensure the quality of your presentation. You must create your presentation as a Google Slides presentation and share and submit the link to your presentation by 5pm the night before the showcase."
  },
  {
    "objectID": "project.html#github-repository",
    "href": "project.html#github-repository",
    "title": "Final Project",
    "section": "Github Repository",
    "text": "Github Repository\nYour github respository should (a) contain a descriptive README.md file that explains what the repo is for, and how to use the code to reproduce your work (including how to set it up to run), (b) be well commented throughout all files, (c) list all dependencies in a requirements.txt file, (d) inform the user how to get the data and includes all preprocessing code, and (e) actually runs (i.e. we can successfully test it) and does what it says\nAlso include a copy of your final report and a link to your project video from the README.md file."
  },
  {
    "objectID": "project.html#peer-evaluation",
    "href": "project.html#peer-evaluation",
    "title": "Final Project",
    "section": "Peer Evaluation",
    "text": "Peer Evaluation\nSince this is a team project, you will also receive feedback from your teammates AND reflect on your own performance in a self-evaluation. You will be evaluating your fellow team members on the following criteria:\n\nWas dependable in attending meetings to work on the project\nDid work accurately and completely\nCompleted work on time\nContributed positively to team discussions\nHelped others when needed\nResponded to communications in a timely manner\nTreated other team members respectfully\nDemonstrated a positive attitude about the team and its work\n\nThis evaluation is NOT based directly on the scores that you receive in the feedback, but a satisfactory peer and self-evaluation is assessed based on the level of constructiveness of the feedback you provide. More detailed, constructive feedback is more useful to help your peers better understand their strengths and areas for growth. Doing so respectfully and compassionately is a requirement. Your peers will receive anonymized versions of the feedback that you share."
  },
  {
    "objectID": "project.html#submission-evaluation-grading",
    "href": "project.html#submission-evaluation-grading",
    "title": "Final Project",
    "section": "Submission, Evaluation, & Grading",
    "text": "Submission, Evaluation, & Grading\nYou should submit each deliverable from your project through Gradescope. You will submit a link to each team deliverable. This should be submitted AS A TEAM not through individual submissions (points will be deducted if this is not followed). The project proposal, and draft final report should be submitted through GradeScope as links to Google Docs (so that we can attach easy-to-repond-to comments) using the templates provided. The link to the presentation slides and github repo should also both be submitted as links via GradeScope. The final project report, however, should be submitted as a PDF document in GradeScope.\nThe grading for this project will be assigned as follows:\n\n\n\n\n\n\n\nComponent\nEvaluation / Feedback Plan\n\n\n\n\nPresentation\n5 points, graded\n\n\nFinal Report\n20 points, graded\n\n\nTeam Proposal\nWritten feedback will be provided to help guide your project design.**\n\n\nDraft Final Report\nWritten feedback will be provided to help guide your final report writing.**\n\n\nGithub Repository\nRequired for project submission to be considered complete.**\n\n\nPeer Evaluation\nRequired for project submission to be considered complete.**\n\n\nTotal\n25 points\n\n\n\n** No points will be directly assigned. One point will be deducted from your overall final project score for each day late; up to 2 points may be deducted from the overall project score (out of 25 possible points) if the deliverable is unsatisfactory (if it does not represent a serious effort towards the deliverable)"
  },
  {
    "objectID": "project.html#ideas",
    "href": "project.html#ideas",
    "title": "Final Project",
    "section": "Ideas",
    "text": "Ideas\n\nReproduce the work of a published study and build on it. Reproducing the results of a journal article can be a great way to dive into advanced materials. The goal for a project like this would be to reproduce the study and build on it in some way: test a new hypothesis, adjust the methodology, try it on other data that may present new and interesting challenges. Reproducing papers can be hard, so you’ll want to choose wisely and make clear what your innovation will be. As a starting place, you can explore Papers with Code which typically have papers where the code and the data are both shared, often making reproducing their work simpler. This is the recommended project type for teams in doubt.\nParticipate in an active machine learning competition. Online machine learning competitions are sponsored by organizations with a significantly high interest in a problem that they are investing prize money into finding a solution. Examples of competition platforms include Kaggle, Driven Data, Zindi, AICrowd, etc. If you choose to participate in a competition, it must be an active competition where your team can compete; it cannot be a “sample” competition that is only for learning to use the platform (e.g. the Kaggle Titanic competition, etc.). You will want to learn about the application domain. Note: these competitions often do the hard work of data preprocessing for you, so you are expected to generate a competitive submission - it doesn’t need to top the leaderboard, but you should be in the upper quartile of competitors.\nDesign your own project based on a question, e.g. how well buildings be detected in satellite imagery across diverse geographies? Satellite imagery is enabling us to create functional maps of the world based on the content in the images. Automating building identification could help map global population and analyze global population growth in real-time. However, different parts of the world look different: forests, deserts, plains, etc. Each location looks differently. This may impact the ability to train an algorithm on one location and test on another location. This project uses the INRIA building dataset to investigate the impact of different geographies on the performance of building detection and segmentation techniques using satellite imagery.\nBuild your own tool. Great value can come from making a tool available for use, but building the infrastructure is a challenge. You may want to create a chatbot that creates poetry based on themes that you feed in, or design a search tool that scans satellite data of the Earth for signs of natural disasters. The key here is that your tool will need to be functional and usable by your target audience."
  },
  {
    "objectID": "index.html#course-summary",
    "href": "index.html#course-summary",
    "title": "Overview",
    "section": "Course Summary",
    "text": "Course Summary\nIn almost every field, there is a need to draw inference from or make decisions based on data. The goal of this course is to provide an introduction to machine learning that is approachable to diverse disciplines and empowers students to become proficient in the foundational concepts and tools. You will learn to (a) structure a machine learning problems and determine which algorithmic tools are appropriate, (b) evaluate the performance of your solution using field-appropriate metrics and practices, and (c) accurately interpret your model output and communicate your results to interdisciplinary audiences. This course is a fast-paced, applied introduction to machine learning that through extensive practice with foundational tools, helps you to develop your knowledge of foundational machine learning concepts, and provides practical experience with those tools to prepare you for practice or future study."
  },
  {
    "objectID": "index.html#detailed-description",
    "href": "index.html#detailed-description",
    "title": "Overview",
    "section": "Detailed description",
    "text": "Detailed description\nMachine learning is a collection of useful tools for understanding and making decisions based on data and past experience; it is not a hammer to be applied to every nail, but rather a precision tool to be used when needed. This course will begin with exploring the purpose of machine learning told through a discussion of the types of problems that machine learning can answer: describing, predicting, and strategizing based on data and the tools at our disposal to address these challenges: supervised learning including classification and regression; unsupervised learning including clustering and density estimation; and reinforcement learning. There will be a strong focus on how to formulate a machine learning problem. Central to that formulation will be developing an understanding of how to preprocess data for analysis (e.g. feature extraction/dimensionality reduction, training/validation data sampling), model selection, and performance evaluation with cross validation. The final topic of this course will be a brief overview of state-of-the-art machine learning techniques that are emerging in the field.\nThroughout this course, the focus will be on applying algorithms rather than diving deeply into theory. You will be asked to consider the practical issues of machine learning problem solving: challenges of applying machine learning code packages, striving for parsimony (simplicity of models) and interpretability, and ensuring model assumptions are valid for a given problem and dataset. This course will also stress the importance of team-based collaboration, the value of producing fully reproducible and validated results, and tools to help with both such as version control and code repositories.\nCommunicating your results. Data science solutions are only as impactful as the communicator who shares them: therefore communication of your findings will be a core component of this course. Demonstrating competency in data science means (a) exhibiting a working knowledge of technical concepts including programming, statistics, and mathematics and (b) being able to clearly communicate the problem you were trying to solve or question you were trying to answer, why it matters, and how well your analysis worked. You will have opportunities to practice these skills throughout this course in the context of interpreting and sharing the results of your analyses."
  },
  {
    "objectID": "contacts.html",
    "href": "contacts.html",
    "title": "Instructional Team",
    "section": "",
    "text": "Contact Us & Office Hourse\n\n\n\nReach out to us through Ed Discussions for any questions. Office hours are also posted on Ed.\n\n\n\nInstructor\n\n\n\nKyle Bradbury (, )\n\n\nDr. Kyle Bradbury develops and applies machine learning techniques to better understand and manage energy and climate resources. His work focuses on how to advance machine learning methodologies and apply them to solve energy and climate system challenges through the development of open source, widely-applicable computational tools. His current research interests include developing scalable computer vision techniques for assessing energy resources, infrastructure, and access globally through the use of publicly available remote sensing data. Methodologically, he investigates how to overcome the challenge of distribution shift in computer vision through novel training paradigms that require less labeled data.\n\n\nTeaching Assistants\n\n\n\n\n\n\nSusanna Anil (, )\n\n\n\n\n\n\n\nDingkun Yang (, )\n\n\n\n\n\n\n\nYuanjing Zhu (, )"
  },
  {
    "objectID": "pedagogy.html",
    "href": "pedagogy.html",
    "title": "Pedagogy",
    "section": "",
    "text": "Tenet #1: Good learning is active learning\nEveryone who was good at something was once bad at it. Learning comes from practice. No amount of reading or video/lecture watching alone will help you to become good without actively engaging with the material through practice. That is why this entire course is focused on supporting you to actively apply machine learning techniques through the assignments, quizzes, and project. Concept described in Make It Stick.\n\n\nTenet #2: Desirable difficulty leads to meaningful learning\nLearning is most effective when there’s a degree of struggle with the material. “Requiring students to organize new information and to work harder in the initial learning period can lead to greater and deeper learning. Although this struggle, dubbed a desirable difficulty…may at first be frustrating to learner and teacher alike, ultimately it improves long-term retention” (Excerpt from A Concise Guide to Improving Student Learning: Six Evidence-Based Principles and How to Apply Them). Desirable difficulties help you build connections between concepts and learn representations of knowledge (meta-cognition) that, like an index of a book, will increase your ability to creatively connect concepts and think more deeply about the topic. This is also described in Make It Stick.\n\n\nTenet #3: Read, reflect, recall is a pattern for effective learning\nSpaced retrieval and reflection is a key to effective learning. When we learn something, if we don’t use it, the knowledge fades. However, if we return to the material, apply it, create with it, we’re increasing the probability of long-term learning. This is why you will interact with each concept typically 4 times: lectures, readings, quizzes, and assignments, and at least one more time for those concepts involved in the final project. An added benefit of the frequent reflection through quizzes is that it tests your knowledge regularly, helping us to avoid the illusion of knowledge (thinking we know something, when we actually do not).\nReference Brown, P.C., Roediger III, H.L. and McDaniel, M.A., 2014. Make it stick: The science of successful learning. Harvard University Press."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "The schedule below is a guide to what we will be covering throughout the semester and is subject to change to meet the learning goals of the class. Check this website regularly for the latest schedule and for course materials that will be posted here through links on the syllabus.\n\n\n\n\n\n\nKey to books used below\n\n\n\n\nISL = An Introduction to Statistical Learning with Python, by James, Witten, Hastie, and Tibshirani\nUDL = Understanding Deep learning by Simon Prince\nDM = Introduction to Data Mining, by Tan, Steinbach, Karpatne, and Kumar\nPRML = Pattern Recognition and Machine Learning, by Bishop\nDL = Deep Learning, by Goodfellow, Bengio, and Courville\nRL = Reinforcement Learning: An Introduction: An Introduction, by Sutton and Barto\n\n\n\n\n\n  \n    \n      Event Type\n      Date\n      Description\n      Readings\n      Course Materials\n    \n  \n\n  \n    Lecture 1\n    Thursday Jan 11\n    \n      What is machine learning? \n      Course overview and an orientation to the major branches of machine learning: supervised, unsupervised, and reinforcement learning \n    \n    None\n    \n      \n      [slides]\n    \n  \n\n  \n    \n    Monday  Jan 15\n    Martin Luther King Jr. Day\n    \n    \n  \n\n  \n    \n    \n    Module 1: Supervised Learning\n    \n    \n  \n\n  \n    Lecture 2\n    Tuesday  Jan 16\n    \n      An end-to-end machine learning example \n      An introduction to formulating a supervised machine learning problem. Stating the problem, creating the model, evaluating performance, and operationalizing the solution. \n    ISL Ch. 1 + 2.1Watch this lecture \n    \n      \n      [slides]\n      [sample code]\n    \n  \n\n  \n    Lecture 3\n    Thursday  Jan 18\n    \n      How flexible should my algorithms be: the bias-variance tradeoff  \n      K-nearest neighbors classification and the bias-variance tradeoff \n    \n    ISL 2.2\n    \n      \n      [slides]\n    \n  \n\n  \n    Deliverable\n     Monday Jan 22\n    Assignment #1 Due (at 9pm) Probability, Linear Algebra, & Computational Programming\n    \n    \n      [assignment]\n      [sample Q12]\n      \n      [submit]\n    \n  \n\n  \n    Lecture 4\n    Tuesday  Jan 23\n    \n      Linear Models I \n      Simple linear regression, multiple linear regression, measuring error, model fitting and least squares, comparing linear regression and classification\n    \n    ISL Intro of 3, 3.1, and 3.2\n    \n      \n      [slides]\n    \n  \n\n\n\n  \n    Lecture 5\n    Thursday  Jan 25\n    \n      Linear Models II \n      Nonlinear transformations of predictors; linear models for classification including the perceptron and logistic regression; cost/loss functions for classification (cross entropy loss); introduction to gradient descent.\n    \n    ISL 3.3 and 3.5\n    \n      \n      [slides]\n    \n  \n  \n  \n    Lecture 6\n    Tuesday  Jan 30\n    \n      Performance evaluation and model comparison \n      Choosing the right model: accuracy vs speed vs interpretability; metrics for supervised learning performance evaluation: types of errors, receiver operating characteristics curves, and confusion matrices\n    \n    ISL 4.1, 4.2, and 4.3\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 7\n    Thursday  Feb 1\n    \n      Resampling methods for performance evaluation: model validation  and testing strategies \n      How to use model performance metrics to measure metrics of generalization performance; resampling techniques: training, testing, and validation datasets and cross validation; common pitfalls around biased sampling and data snooping/leakage\n    \n    ISL 5.1 and 5.2\n    \n      \n      [slides]\n    \n  \n\n  \n    Deliverable\n     MondayFeb 5\n    Assignment #2 Due (at 9pm)Supervised Machine Learning Fundamentals\n    \n    \n      \n      [assignment]\n      \n      [submit]\n    \n  \n\n  \n    Lecture 8\n    Tuesday  Feb 6\n    \n      Decision theory \n      A risk-based framework for determining to operate supervised learning algorithms in practice; choosing ROC operating points through risk-minimization and how application-specific costs associated with different types of errors can be used to determine optimal operating points for classifiers\n    \n    \n      \n      Link to reading\n    \n    \n      \n      [slides]\n    \n  \n\n    \n    Lecture 9\n    Thursday  Feb 8\n    \n      Reducing overfit \n      Feature selection; Occam’s razor; Subset selection; L1 (ridge), L2 (LASSO), and elastic net regularization; early stopping.\n    \n    ISL 6.1 and 6.2\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 10\n    Tuesday  Feb 13\n    \n      Generative models for classification \n      Generative vs discriminative models; linear discriminant analysis, quadratic discriminant analysis, and naïve Bayes\n    \n    ISL 4.4 and 4.5\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 11\n    Thursday  Feb 15\n    \n      Tree-based models and ensembles \n      From decision trees to random forests: bagging, bootstrapping, and boosting\n    \n    ISL 8.1 and 8.2\n    \n      \n      [slides]\n    \n  \n\n  \n    Deliverable\n     Monday  Feb 19\n    Assignment #3 Due (at 9pm)Supervised learning model training and evaluation\n    \n    \n      \n      [assignment]\n      \n      [submit]\n    \n  \n\n  \n    Lecture 12\n    Tuesday  Feb 20\n    \n      Kernel Methods \n      Introducing Kernel machines via the kernel perceptron, maximum margin classifiers, and support vector machines\n    \n    ISL Ch 9: 9.1-9.4\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 13\n    Thursday  Feb 22\n    \n      Neural networks I \n      Introduction to neural networks and representation learning; forward propagation, network architecture, and how to adapt to regression or classification problems\n    \n    UDL Ch 3: 3.1, 3.2; PRML Ch 5: 5.1 \n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 14\n    Tuesday  Feb 27\n    \n      Neural networks II \n      Fitting a neural network to training data through gradient descent and backpropagation; how backpropagation is used to compute gradients in neural networks; hyperparameters and architecture choices in neural networks and practices for training neural networks warningfully\n    \n    UDL Ch 6: 6.1-6.2.2; PRML Ch 5: 5.3.1, and Calculus on Computational Graphs\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 15\n    Thursday  Feb 29\n    \n      Introduction to Deep learning \n      Common architectures of deep learning models, in particular convolutional neural networks for computer vision and the tools used to implement them\n    \n    DL Ch 11: Practical Methodology\n    \n      \n      [slides]\n    \n  \n\n  \n    \n    \n    Module 2: Unsupervised Learning\n    \n    \n  \n\n  \n    Lecture 16\n    TuesdayMar 5\n    \n      Dimensionality reduction \n      The Curse of Dimensionality and intro to principal components analysis (PCA)\n    \n    ISL 6.3, 6.4, 12.1, and 12.2 \n    \n      \n      [slides]\n    \n  \n\n  \n    Deliverable\n    Wednesday  Mar 6\n    Assignment #4 Due (at 9pm)Neural Networks\n    \n    \n      \n      \n      [assignment]\n      [submit]\n      [NN Math Guide]\n    \n  \n\n  \n    Lecture 17\n    ThursdayMar 7\n    \n      Principal components analysis (PCA) \n      Explaining how PCA works and how we calculate the principal components.\n    \n    ISL 12.4\n    \n      [slides]\n      \n    \n  \n\n  \n    Deliverable\n     Friday  Mar 8 \n    Project Proposal Due (at 9pm)\n    \n    \n      \n      \n      [project]\n      [submit]\n    \n  \n\n  \n    \n    Mar 9-16\n    Spring Break Week\n    \n    \n  \n\n  \n    Lecture 18\n    Tuesday  Mar 19\n    \n      Clustering I \n      From K-means to Gaussian mixture model clustering and Expectation Maximization\n    \n    DM Ch 7 (link): Intro, 7.1 and 7.2\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 19\n    Thursday  Mar 21\n    \n      Clustering II \n      Hierarchical clustering, DBSCAN, and spectral clustering\n    \n   DM Ch 7 (link): 7.3 and 7.4\n   \n     \n      [slides]\n    \n  \n\n  \n    \n    \n    Module 3: Reinforcement Learning\n    \n    \n  \n\n  \n    Lecture 20\n    Tuesday  Mar 26\n    \n      Reinforcement Learning I \n      Formulating the reinforcement learning problem\n    \n    RL Ch 1: 1.1-1.6; Ch 2: 2.1-2.5\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 21\n    Thursday  Mar 28\n    \n      Reinforcement Learning II \n      Policy and value functions, rewards, and introduction to Markov processes \n    \n    RL Ch 3\n    \n      \n      [slides]\n    \n  \n\n  \n    Deliverable\n    Sunday  Mar 31\n    Assignment #5 Due (at 9pm)  Kaggle Competition and Unsupervised LearningKaggle Competition Ends 9pm on Saturday Mar 30\n    \n    \n      \n      [assignment]\n      \n      [submit]\n    \n  \n\n  \n    Lecture 22\n    Tuesday Apr 2\n    \n      Reinforcement Learning III \n      From Markov Chains to Markov Decision Processes (MDPs)\n    \n    RL Ch 4\n    \n      \n      [slides]\n    \n  \n\n  \n    Deliverable\n    Wednesday  Apr 3 \n    Draft Final Project Report Due (at 9pm)\n    \n    \n      \n      \n      [project]\n      [submit]\n    \n  \n\n  \n    Lecture 23\n    Thursday  Apr 4\n    \n      Reinforcement Learning IV \n      Finding optimal policies through policy iteration, value iteration, and Monte Carlo methods\n    \n    RL Ch 5: 5.1-5.3\n    \n      \n      [slides]\n    \n  \n\n  \n    \n    \n    Module 4: Machine Learning Trends, Practical Considerations, and Advanced Topics\n    \n    \n  \n\n  \n    Lecture 24\n    Tuesday  Apr 11\n    \n      Advanced topics and applications I \n      A survey of advanced topics including semi- and self-supervised learning\n    \n    None\n    \n      \n      [slides]\n    \n  \n\n  \n    Lecture 25\n    Thursday  Apr 9\n    \n      Advanced topics and applications II \n      Discussion on where the field is heading and how to stay up-to-date\n    \n    None\n    \n      \n      [slides]\n    \n  \n\n  \n    Deliverable\n    Tuesday  Apr 16\n    \n      Final project showcase(last class meeting of the semester)\n    \n    \n    \n      \n      [project]\n    \n  \n\n  \n    Deliverable\n    Sunday  Apr 21 \n    Final Project Report Due (at 9pm)\n    \n    \n      \n      \n      [project]\n      [submit]\n    \n  \n\n  \n    Deliverable\n    Monday  Apr 22\n    Final Project Peer Evaluation Due (at 9pm)\n    \n    \n      \n      [project]\n      [submit via TEAMMATES (see email)]\n    \n  \n\n  \n    Deliverable\n    Monday  Apr 22\n    Final Project Repository Due (at 9pm)\n    \n    \n      \n      [project]\n      [submit]\n    \n  \n\n  \n    Deliverable\n    Wednesday  Apr 24\n    (Optional) Assignment #6 Due (at 9pm)Reinforcement learning\n    \n    \n      \n      [assignment]\n      [submit]"
  },
  {
    "objectID": "tools.html",
    "href": "tools.html",
    "title": "Software and Hardware Tools",
    "section": "",
    "text": "Programming language: Python\nWe will use Python 3.x. The Anaconda distribution is recommended and comes with the most common packages. Python continues to be an one of the top programming languages and the rich packages in the language make it an excellent choice for machine learning. In particular the Python ecosystem of packages makes it a natural choice for ML including core numerical programming and plotting libraries like numpy, scipy, matplotlib, and pandas as well as excellent packages for machine learning algorithm development and statistical modeling including Scikit-Learn, Keras, and Pytorch.\n\n\nDevelopment environments: VS Code and Jupyter Notebooks\nJupyter lab or Jupyter notebook will be appropriate for most class assignments. We highly encourage you to use Visual Studio Code, in particular due to the debugging capabilities. There are many configurations that may work for you, but I would recommend begin by gathering ideas in Jupyter Notebooks. Once you have the basic structure of your code worked out, consider moving it to a .py file to make it easier and cleaner to run and build on.\n\n\nGraphics processing units (GPUs)\nGPUs are the workhorses of many modern machine learning algorithms, especially any that involve neural network-based architectures. There will be a small number of assignments that will require additional computation from that of GPUs. For these, we will use Google Colab, which is a free notebook environment that enables access to cloud resources including GPUs. For longer sessions before timeouts, greater RAM, and better GPUs you can optionally upgrade to Colab Pro.\nWe will also be making a limited number of cloud credits available to students later in the semester."
  }
]